<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace：命名空间，用于隔离sql，还有一个很重要的作用，后面会讲 -->
<mapper namespace="com.bs.dao.UserDao">
    <!--查询全部的用户所具有的角色-->
    <select id="findAllUserRole" resultType="User" parameterType="User">
        select u.id,u.icon,u.username,u.real_name,u.sex,u.status,u.phone,u.email
        ,group_concat(r.`name`) as `role`
        from wx_user u
        left join wx_user_role_relation ur on u.id=ur.user_id
        left join wx_role r on ur.role_id=r.id and r.status=1
        <where>
            <if test="sex!='全部' and sex!=null">
                sex = #{sex}
            </if>
            <if test="realName !=null and realName !=''">
                and `real_name` = #{realName}
            </if>
            <if test="role !=null and role !='全部'">
              and  r.`name` = #{role}
            </if>
            <if test="status !=null and status!=2">
                and  u.status = #{status}
            </if>
        </where>
        group by u.id
    </select>
    <!--查询角色表中的全部角色-->
    <select id="findAllRole" resultType="Role">
        select *from wx_role
    </select>

    <!--解冻账号-->
    <update id="useful" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" separator=";">
            update wx_user set status=1
            where id=#{item.id}
        </foreach>
    </update>
    <!--冻结账号-->
    <update id="forbidden" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" separator=";">
            update wx_user set status=0
            where id=#{item.id}
        </foreach>
    </update>

<!--    根据账号查询用户详细情况-->
    <select id="selectUserDetail" resultType="User" parameterType="java.lang.String">
        select *from wx_user where username=#{username}
    </select>

    <!--修改用户信息-->
    <update id="updateUser" parameterType="User">
        update wx_user
        <set>
            <if test="icon!=null and icon!=''">
                icon = #{icon},
            </if>
            <if test="sex!=null and sex!=''">
                sex = #{sex},
            </if>
            <if test="phone!=null and phone!=''">
                phone= #{phone},
            </if>
            <if test="email!=null and email!=''">
                email= #{email},
            </if>
        </set>
        where username = #{username}
    </update>

    <!--根据id删除用户信息-->
    <delete id="deleteUserById" parameterType="int">
        delete from wx_user where id = #{id}
    </delete>
    <!--根据id删除用户角色关联表对应的关联-->
    <delete id="delUserRoleRelation" parameterType="User">
        delete from wx_user_role_relation where user_id = #{id}
    </delete>

    <!--查询用户所具有的角色-->
    <select id="getUserRoles" resultType="UserRoleRelation" parameterType="UserRoleRelation">
        select role_id from wx_user_role_relation where user_id=#{userId}
    </select>
    <!--修改权限前，先删除全部权限-->
    <delete id="delUserRole" parameterType="UserRoleRelation">
        delete from wx_user_role_relation where user_id=#{userId}
    </delete>
    <!--修改用户角色==删除成功后新增的用户角色-->
    <insert id="updateRole" parameterType="UserRoleRelation">
        insert into wx_user_role_relation
        (user_id,role_id)
        values (#{userId},#{roleId})
    </insert>
   
</mapper>